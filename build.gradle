plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.8"
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id "me.modmuss50.mod-publish-plugin" version "0.8.3"
    id 'org.spongepowered.mixin' version '0.7.+'
}

group = 'dev.ftb.mods'
version = mod_version_base

def buildNumber = project.providers.environmentVariable("BUILD_NUMBER").getOrElse("0-dev.1")
version = version + "." + buildNumber

base {
    archivesName = mod_id
}

apply from: "https://raw.githubusercontent.com/FTBTeam/mods-meta/main/gradle/publishing.gradle"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

minecraft {
    mappings channel: "official", version: minecraft_version
    copyIdeResources = true

     accessTransformers = project.files('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.ftb.dev/releases"
        content {
            includeGroup("dev.ftb.mods")
            includeGroup("net.rocketplatform.game.client.mod")
        }
    }
    maven {
        url = "https://maven.architectury.dev"
        content {
            includeGroup("dev.architectury")
        }
    }
    maven {
        url = 'https://maven.covers1624.net/'
        content {
            includeGroup("net.covers1624")
        }
    }
}

mixin {
    add sourceSets.main, 'ftbpromoter.mixins.refmap.json'
    config 'ftbpromoter.mixins.json'
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${mod_loader_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly "curse.maven:bisecthosting-server-integration-menu-forge-585546:${bisecthosting_version}"

    // Needs to be pulled into the dev env
//    compileOnly "net.rocketplatform.game.client.mod:rgp-client:${ftb_worlds_version}+mc${minecraft_version}"
//    runtimeOnly "dev.ftb.mods:ftb-library-forge:${ftb_library_version}"
//    runtimeOnly "dev.architectury:architectury-forge:${ftb_library_architectury_version}"

//    implementation "curse.maven:fancymenu-367706:${fancy_menu_version}"

    // Deps
//    runtimeOnly "curse.maven:konkrete-410295:${fancy_menu_konkrete_version}"
//    runtimeOnly "curse.maven:melody-938643:${fancy_menu_melody_version}"
}

processResources {
    var replaceProperties = [
            mod_version: project.version,
            minecraft_version      : project.properties.minecraft_version,
            minecraft_version_range: project.properties.minecraft_version_range,
            neo_version            : project.properties.mod_loader_version,
            neo_version_range      : project.properties.mod_loader_version_range,
            loader_version_range   : project.properties.loader_version_range,
    ]

    inputs.properties replaceProperties

    filesMatching('META-INF/mods.toml') {
        expand replaceProperties
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "MixinConfigs": "ftbpromoter.mixins.json",
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : "FTB Team",
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : "FTB Team",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }

    repositories {
        if (ftbPublishing.ftbToken) {
            maven {
                url ftbPublishing.ftbURL
                credentials {
                    username = ftbPublishing.ftbUser
                    password = ftbPublishing.ftbToken
                }
            }
        }
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

publishMods {
    def cfToken = providers.environmentVariable("CURSEFORGE_KEY")

    dryRun = !cfToken.isPresent()
    changelog = createChangelog()
    file = jar.archiveFile
    displayName = "[FORGE] FTB Promoter ${project.version}"
    modLoaders.add("forge")

    type = stability == "alpha" ? ALPHA : (stability == "beta" ? BETA : STABLE)

    curseforge {
        accessToken = cfToken.isPresent() ? cfToken.get() : ""
        minecraftVersions.add(minecraft_version)

        projectId = curseforge_id

        optional('fancymenu')
        optional('bisecthosting-server-integration-menu-neoforge')
    }
}
